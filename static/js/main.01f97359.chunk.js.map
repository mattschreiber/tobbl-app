{"version":3,"sources":["Login.js","components/DailyScore.js","components/Standings.js","views/Home.js","components/RecordEntry.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","userName","setUserName","password","setPassword","history","useHistory","className","onSubmit","e","preventDefault","console","log","push","alert","htmlFor","type","id","value","onChange","target","DailyScore","props","scope","map","score","i","period","score1","score2","team1","team2","Standings","color","styles","division","teamObj","newTeamObj","forEach","team","sort","a","b","teamWins","GetDivision","teamName","teamLosses","Home","scoreObj","RecordEntry","setPeriod","setTeam1","setTeam2","setScore1","setScore2","teamList","unshift","parseInt","required","Nav","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","to","activeClassName","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01f97359.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nfunction Login() {\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const email = 'test@test.com';\r\n    const pWord =\"1234\";\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (email === userName && pWord === password) {\r\n            console.log(\"login matched\");\r\n            history.push('/');\r\n        } else {\r\n            alert(\"Invalid email or password\");\r\n        }\r\n      }\r\n\r\n    return (\r\n            <div className=\"container-fluid\">\r\n            <div className='row'>\r\n                <div className='col-sm'></div>\r\n                <div className='col-sm'>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className={'form-group'}>\r\n                        <label htmlFor='userName'>Email:</label>\r\n                        <input type='email' id='userName' className={'form-control'} value={userName} onChange={e => setUserName(e.target.value)} />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <label htmlFor='password'>Password:</label>\r\n                        <input type='password' id='password' className={'form-control'} value={password} onChange={e => setPassword(e.target.value)} />\r\n                    </div> \r\n                    <div className={'form-group'}>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>     \r\n                    </div>     \r\n                </form>\r\n                </div>\r\n                <div className='col-sm'></div>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n    ","import React from 'react';\r\n\r\nfunction DailyScore (props) {\r\n\r\n    return (\r\n        <div className='row mt-5'>\r\n            <div className='col-12'>\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">\r\n                        Daily Score Log\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive\">\r\n                            <table className='table table-striped'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope='col'>Period</th>\r\n                                        <th scope='col'>Team 1</th>\r\n                                        <th scope='col'>Score 1</th>\r\n                                        <th scope='col'>Team 2</th>\r\n                                        <th scope=\"col\">Score 2</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props.props.map((score, i) =>\r\n                                    <tr key={i}>\r\n                                        <td>{score.period}</td>\r\n                                        <td className={score.score1 > score.score2 ? 'font-weight-bold':'font-weight-normal' }>{score.team1}</td>\r\n                                        <td className={score.score1 > score.score2 ? 'font-weight-bold':'font-weight-normal'}>{score.score1}</td>\r\n                                        <td className={score.score1 < score.score2 ? 'font-weight-bold':'font-weight-normal' }>{score.team2}</td>\r\n                                        <td className={score.score1 < score.score2 ? 'font-weight-bold':'font-weight-normal' }>{score.score2}</td>\r\n                                    </tr>\r\n                                    )}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DailyScore;","import React, { useState } from 'react';\r\n\r\nimport '../App.css';\r\n\r\nfunction Standings(props) {\r\n\r\n    // Used to set color of division name \r\n    const [styles] = useState([{color: 'black'}, {color: 'red'}]);\r\n    \r\n    return (\r\n        <div className='row mt-5'>\r\n            <div className='col-12'>\r\n                <h3 className={props.division === 'Red' ? styles[1].color : styles[0].color}>{props.division} Division</h3>\r\n                <table className='table table-striped'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope='col'>Team Name</th>\r\n                            <th scope='col'>Wins</th>\r\n                            <th scope='col'>Losses</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {GetDivision(props.props, props.division).map((team, i) =>\r\n                        <tr key={i}>\r\n                            <td>{team.teamName}</td>\r\n                            <td>{team.teamWins}</td>\r\n                            <td>{team.teamLosses}</td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='col'>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n    // Function the iterates over each and returns only those matching the division parameter\r\n    function GetDivision(teamObj, division) {\r\n        let newTeamObj=[];\r\n        teamObj.forEach(team => {\r\n            if (team.division === division) {\r\n                newTeamObj.push(team);\r\n            }\r\n        });\r\n\r\n        // sort by team with most wins\r\n        newTeamObj.sort((a, b) => {\r\n            return b.teamWins - a.teamWins;\r\n        });\r\n\r\n        return newTeamObj;\r\n    }\r\n}\r\n\r\nexport default Standings;","import React, {useState} from 'react';\r\nimport DailyScore from '../components/DailyScore';\r\nimport Standings from '../components/Standings';\r\n\r\n// home page\r\nfunction Home() {\r\n    const [teamObj] = useState([\r\n        {teamName: 'Naps', teamWins: 5, teamLosses: 2, division: 'Black'}, {teamName: 'Ironmen', teamWins: 6, teamLosses: 1, division: 'Red'}, {teamName: 'Social Zeros', teamWins: 1, teamLosses: 6, division: 'Red'}, {teamName: 'Millionare Row', teamWins: 3, teamLosses: 4, division: 'Red'},\r\n        {teamName: 'Cleveland Spiders', teamWins: 2, teamLosses: 5, division: 'Black'}, {teamName: 'Durham Bulls', teamWins: 6, teamLosses: 1, division: 'Black'}\r\n    ]);\r\n\r\n    const [scoreObj] = useState([\r\n        {period: 1, team1: \"Naps\", score1: 50, team2: \"Durham Bulls\", score2: 40},\r\n        {period: 1, team1: \"Cleveland Spiders\", score1: 35, team2: \"Millionare Row\", score2: 57},\r\n        {period: 1, team1: \"Social Zeros\", score1: 25, team2: \"Ironmen\", score2:56}\r\n    ])\r\n\r\n    // const [division] = useState('');\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h1 className=\"text-center mt-3\">Current Standings</h1>\r\n        <div className='row'>\r\n            <div className='col-lg'>\r\n                <Standings props = {teamObj} division = \"Black\" />\r\n            </div>\r\n            <div className='col-lg'>\r\n                <Standings props = {teamObj} division = \"Red\" />\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"mx-auto col-lg-12\">\r\n                <DailyScore props = {scoreObj} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useState} from 'react';\r\n\r\nimport DailyScore from './DailyScore';\r\n\r\nfunction RecordEntry() {\r\n    const [period, setPeriod] = useState('');\r\n    const [team1, setTeam1] = useState('Naps');\r\n    const [team2, setTeam2] = useState('Ironmen');\r\n    const [score1, setScore1] = useState(0);\r\n    const [score2, setScore2] = useState(0);\r\n\r\n    const [teamList] = useState(['Ironmen', 'Naps', 'Row']);\r\n\r\n    const [scoreObj] = useState([\r\n        {period: 1, team1: \"Naps\", score1: 50, team2: \"Durham Bulls\", score2: 40},\r\n        {period: 1, team1: \"Cleveland Spiders\", score1: 35, team2: \"Millionare Row\", score2: 57},\r\n        {period: 1, team1: \"Social Zeros\", score1: 25, team2: \"Ironmen\", score2:56}\r\n    ])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (score1 === 0 && score2 === 0){\r\n            return\r\n        }\r\n\r\n        scoreObj.unshift({period: parseInt(period), team1: team1, score1: parseInt(score1), team2: team2, score2: parseInt(score2)});\r\n        setScore1(0);\r\n        setScore2(0); \r\n      }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n        <div className='row'>\r\n            {/* <div className='col-sm'></div> */}\r\n            <div className='col-sm-6'>\r\n            <form onSubmit={handleSubmit}>\r\n            <div className='form-row'>\r\n                <div className={'form-group col-lg-6'}>\r\n                    <label htmlFor='period'>Period:</label>\r\n                    <input required type='text' id='period' className={'form-control'} value={period} onChange={e => setPeriod(e.target.value)} />\r\n                </div>\r\n            </div>\r\n                <div className='form-row'>\r\n                    <div className={'form-group col-lg-6'}>\r\n                    <label htmlFor='team1'>Team 1:</label>\r\n                        <select id='team1' className='custom-select' value={team1} onChange={e => setTeam1(e.target.value)}>\r\n                            {teamList.map((team, i)=> (\r\n                                <option key={i} value={team}>{team}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div> \r\n                    <div className={'form-group col-lg-6'}>\r\n                        <label htmlFor='score1'>Score 1:</label>\r\n                        <input type='text' id='score1' className={'form-control'} value={score1} onChange={e => setScore1(e.target.value)} />\r\n                    </div> \r\n                </div>\r\n                <div className='form-row'>\r\n                    <div className={'form-group col-lg-6'}>\r\n                    <label htmlFor='team2'>Team 2:</label>\r\n                        <select id='team2' className='custom-select' value={team2} onChange={e => setTeam2(e.target.value)}>\r\n                        {teamList.map((team, i)=> (\r\n                                <option key={i} value={team}>{team}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div> \r\n                    <div className={'form-group col-lg-6'}>\r\n                        <label htmlFor='score2'>Score 2</label>\r\n                        <input type='text' id='score2' className={'form-control'} value={score2} onChange={e => setScore2(e.target.value)} />\r\n                    </div> \r\n                </div>\r\n                <div className={'form-group'}>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>     \r\n                </div>     \r\n            </form>\r\n            </div>\r\n            <div className='col-sm'></div>\r\n        </div>\r\n        <div className=\"row\">\r\n            {/* <div className=\"col-lg-3\"></div> */}\r\n            <div className=\"col-lg-6\">\r\n                <DailyScore props = {scoreObj} />\r\n            </div>\r\n            {/* <div className=\"col-lg-3\"></div> */}\r\n        </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecordEntry;\r\n","// import logo from './logo.svg';\r\nimport React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport Login from './Login';\r\nimport Home from './views/Home';\r\nimport RecordEntry from './components/RecordEntry';\r\n// import Standings from './components/Standings';\r\nimport './App.css';\r\n\r\nconst Nav = () => (\r\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"/tobbl/app/\">Tobbl</a>\r\n      {/* <NavLink className=\"nav-brand\" to=\"/\">Tobbl</NavLink> */}\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul className=\"navbar-nav\">\r\n      <li className=\"nav-item\">\r\n        <NavLink exact className=\"nav-link\" to=\"/\" activeClassName=\"active\">Home <span className=\"sr-only\">(current)</span></NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/record-entry\">Enter Score</NavLink>\r\n      </li>\r\n    </ul>\r\n    <ul className=\"navbar-nav ml-auto\">\r\n    <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/login\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  </nav>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/tobbl-app/\">\r\n    <div className=\"App\">\r\n      <Nav />\r\n      {/* <header className=\"App-header\"> */}\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a> */}\r\n      {/* </header> */}\r\n\r\n      {/* <Login />\r\n      <RecordEntry />\r\n      <Home /> */}\r\n      <Switch>\r\n        <Route exact path=\"/\"><Home /></Route>\r\n        <Route path=\"/record-entry\"><RecordEntry /></Route>\r\n        <Route path=\"/login\"><Login /></Route>\r\n      </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}